#! /usr/bin/env python

import roslib; roslib.load_manifest('nao_world_msgs')
import rospy
import actionlib
from naoqi import ALProxy
from nao_world_msgs.msg import *

class PickupActionServer:
  def __init__(self):
    self.server = actionlib.SimpleActionServer('/nao_world_msgs/PickupActionServer', PickupAction, self.execute, False)
    self.server.start()
    rospy.loginfo("Pickup Action Server started.")

  def execute(self, goal):
    # Do lots of awesome groundbreaking robot stuff here
    #self.pickup()
    self.server.set_succeeded()
    
  def pickup(self):
    names = list()
    times = list()
    keys = list()

    names.append("HeadYaw")
    times.append([ 1.40000, 4.60000, 7.80000, 11.00000, 14.20000, 17.50000, 20.70000, 23.90000, 27.30000, 31.00000, 33.10000])
    keys.append([ [ -0.00004, [ 3, -0.46667, 0.00000], [ 3, 1.06667, 0.00000]], [ 0.01070, [ 3, -1.06667, 0.00000], [ 3, 1.06667, 0.00000]], [ -0.00925, [ 3, -1.06667, 0.00000], [ 3, 1.06667, 0.00000]], [ -0.00771, [ 3, -1.06667, -0.00153], [ 3, 1.06667, 0.00153]], [ 0.00149, [ 3, -1.06667, 0.00000], [ 3, 1.10000, 0.00000]], [ 0.00149, [ 3, -1.10000, 0.00000], [ 3, 1.06667, 0.00000]], [ -0.00771, [ 3, -1.06667, 0.00000], [ 3, 1.06667, 0.00000]], [ -0.00771, [ 3, -1.06667, 0.00000], [ 3, 1.13333, 0.00000]], [ -0.01538, [ 3, -1.13333, 0.00000], [ 3, 1.23333, 0.00000]], [ -0.00311, [ 3, -1.23333, -0.00685], [ 3, 0.70000, 0.00389]], [ 0.01683, [ 3, -0.70000, 0.00000], [ 3, 0.00000, 0.00000]]])

    names.append("HeadPitch")
    times.append([ 1.40000, 4.60000, 7.80000, 11.00000, 14.20000, 17.50000, 20.70000, 23.90000, 27.30000, 31.00000, 33.10000])
    keys.append([ [ 0.03064, [ 3, -0.46667, 0.00000], [ 3, 1.06667, 0.00000]], [ 0.02297, [ 3, -1.06667, 0.00000], [ 3, 1.06667, 0.00000]], [ 0.03524, [ 3, -1.06667, -0.00281], [ 3, 1.06667, 0.00281]], [ 0.03984, [ 3, -1.06667, -0.00384], [ 3, 1.06667, 0.00384]], [ 0.05825, [ 3, -1.06667, -0.00554], [ 3, 1.10000, 0.00571]], [ 0.07359, [ 3, -1.10000, 0.00000], [ 3, 1.06667, 0.00000]], [ 0.03984, [ 3, -1.06667, 0.00000], [ 3, 1.06667, 0.00000]], [ 0.03984, [ 3, -1.06667, 0.00000], [ 3, 1.13333, 0.00000]], [ 0.00303, [ 3, -1.13333, 0.00000], [ 3, 1.23333, 0.00000]], [ 0.01376, [ 3, -1.23333, 0.00000], [ 3, 0.70000, 0.00000]], [ -0.67195, [ 3, -0.70000, 0.00000], [ 3, 0.00000, 0.00000]]])

    names.append("LShoulderPitch")
    times.append([ 1.40000, 4.60000, 7.80000, 11.00000, 14.20000, 17.50000, 20.70000, 23.90000, 27.30000, 31.00000, 33.10000])
    keys.append([ [ 1.41891, [ 3, -0.46667, 0.00000], [ 3, 1.06667, 0.00000]], [ 1.42198, [ 3, -1.06667, 0.00000], [ 3, 1.06667, 0.00000]], [ 1.37902, [ 3, -1.06667, 0.00000], [ 3, 1.06667, 0.00000]], [ 1.40664, [ 3, -1.06667, -0.01227], [ 3, 1.06667, 0.01227]], [ 1.45266, [ 3, -1.06667, 0.00000], [ 3, 1.10000, 0.00000]], [ -0.32218, [ 3, -1.10000, 0.00000], [ 3, 1.06667, 0.00000]], [ 0.07359, [ 3, -1.06667, 0.00000], [ 3, 1.06667, 0.00000]], [ -0.37587, [ 3, -1.06667, 0.00000], [ 3, 1.13333, 0.00000]], [ -0.10742, [ 3, -1.13333, -0.06611], [ 3, 1.23333, 0.07195]], [ 0.03831, [ 3, -1.23333, -0.04012], [ 3, 0.70000, 0.02277]], [ 0.08126, [ 3, -0.70000, 0.00000], [ 3, 0.00000, 0.00000]]])

    names.append("LShoulderRoll")
    times.append([ 1.40000, 4.60000, 7.80000, 11.00000, 14.20000, 17.50000, 20.70000, 23.90000, 27.30000, 31.00000, 33.10000])
    keys.append([ [ 0.34204, [ 3, -0.46667, 0.00000], [ 3, 1.06667, 0.00000]], [ 0.34051, [ 3, -1.06667, 0.00000], [ 3, 1.06667, 0.00000]], [ 0.36965, [ 3, -1.06667, -0.02915], [ 3, 1.06667, 0.02915]], [ 1.30539, [ 3, -1.06667, 0.00000], [ 3, 1.06667, 0.00000]], [ 1.28085, [ 3, -1.06667, 0.01938], [ 3, 1.10000, -0.01999]], [ 1.18727, [ 3, -1.10000, 0.09357], [ 3, 1.06667, -0.09074]], [ 0.00873, [ 3, -1.06667, 0.00000], [ 3, 1.06667, 0.00000]], [ 0.00873, [ 3, -1.06667, 0.00000], [ 3, 1.13333, 0.00000]], [ 0.04291, [ 3, -1.13333, -0.01525], [ 3, 1.23333, 0.01660]], [ 0.10427, [ 3, -1.23333, 0.00000], [ 3, 0.70000, 0.00000]], [ 0.07512, [ 3, -0.70000, 0.00000], [ 3, 0.00000, 0.00000]]])

    names.append("LElbowYaw")
    times.append([ 1.40000, 4.60000, 7.80000, 11.00000, 14.20000, 17.50000, 20.70000, 23.90000, 27.30000, 31.00000, 33.10000])
    keys.append([ [ -1.38678, [ 3, -0.46667, 0.00000], [ 3, 1.06667, 0.00000]], [ -1.38678, [ 3, -1.06667, 0.00000], [ 3, 1.06667, 0.00000]], [ -1.40212, [ 3, -1.06667, 0.00000], [ 3, 1.06667, 0.00000]], [ -1.06617, [ 3, -1.06667, -0.02915], [ 3, 1.06667, 0.02915]], [ -1.03703, [ 3, -1.06667, -0.02915], [ 3, 1.10000, 0.03006]], [ -0.33292, [ 3, -1.10000, -0.14823], [ 3, 1.06667, 0.14374]], [ -0.16111, [ 3, -1.06667, 0.00000], [ 3, 1.06667, 0.00000]], [ -0.16725, [ 3, -1.06667, 0.00000], [ 3, 1.13333, 0.00000]], [ -0.08748, [ 3, -1.13333, -0.02449], [ 3, 1.23333, 0.02665]], [ -0.01385, [ 3, -1.23333, 0.00000], [ 3, 0.70000, 0.00000]], [ -0.01998, [ 3, -0.70000, 0.00000], [ 3, 0.00000, 0.00000]]])

    names.append("LElbowRoll")
    times.append([ 1.40000, 4.60000, 7.80000, 11.00000, 14.20000, 17.50000, 20.70000, 23.90000, 27.30000, 31.00000, 33.10000])
    keys.append([ [ -1.02314, [ 3, -0.46667, 0.00000], [ 3, 1.06667, 0.00000]], [ -1.02160, [ 3, -1.06667, 0.00000], [ 3, 1.06667, 0.00000]], [ -1.02467, [ 3, -1.06667, 0.00307], [ 3, 1.06667, -0.00307]], [ -1.04001, [ 3, -1.06667, 0.00000], [ 3, 1.06667, 0.00000]], [ -0.04905, [ 3, -1.06667, 0.00000], [ 3, 1.10000, 0.00000]], [ -0.07666, [ 3, -1.10000, 0.00000], [ 3, 1.06667, 0.00000]], [ -0.06592, [ 3, -1.06667, 0.00000], [ 3, 1.06667, 0.00000]], [ -0.06592, [ 3, -1.06667, 0.00000], [ 3, 1.13333, 0.00000]], [ -0.06592, [ 3, -1.13333, 0.00000], [ 3, 1.23333, 0.00000]], [ -0.04291, [ 3, -1.23333, 0.00000], [ 3, 0.70000, 0.00000]], [ -0.06132, [ 3, -0.70000, 0.00000], [ 3, 0.00000, 0.00000]]])

    names.append("LWristYaw")
    times.append([ 1.40000, 4.60000, 7.80000, 11.00000, 14.20000, 17.50000, 20.70000, 23.90000, 27.30000, 31.00000, 33.10000])
    keys.append([ [ 0.01683, [ 3, -0.46667, 0.00000], [ 3, 1.06667, 0.00000]], [ 0.01530, [ 3, -1.06667, 0.00000], [ 3, 1.06667, 0.00000]], [ 0.01683, [ 3, -1.06667, 0.00000], [ 3, 1.06667, 0.00000]], [ 0.01683, [ 3, -1.06667, 0.00000], [ 3, 1.06667, 0.00000]], [ 0.01530, [ 3, -1.06667, 0.00000], [ 3, 1.10000, 0.00000]], [ 0.01990, [ 3, -1.10000, 0.00000], [ 3, 1.06667, 0.00000]], [ 0.01683, [ 3, -1.06667, 0.00000], [ 3, 1.06667, 0.00000]], [ 0.01683, [ 3, -1.06667, 0.00000], [ 3, 1.13333, 0.00000]], [ 0.00149, [ 3, -1.13333, 0.00000], [ 3, 1.23333, 0.00000]], [ 0.00763, [ 3, -1.23333, 0.00000], [ 3, 0.70000, 0.00000]], [ 0.00303, [ 3, -0.70000, 0.00000], [ 3, 0.00000, 0.00000]]])

    names.append("LHand")
    times.append([ 1.40000, 4.60000, 7.80000, 11.00000, 14.20000, 17.50000, 20.70000, 23.90000, 27.30000, 31.00000, 33.10000])
    keys.append([ [ 0.00020, [ 3, -0.46667, 0.00000], [ 3, 1.06667, 0.00000]], [ 0.00020, [ 3, -1.06667, 0.00000], [ 3, 1.06667, 0.00000]], [ 0.00020, [ 3, -1.06667, 0.00000], [ 3, 1.06667, 0.00000]], [ 0.00021, [ 3, -1.06667, 0.00000], [ 3, 1.06667, 0.00000]], [ 0.00020, [ 3, -1.06667, 0.00000], [ 3, 1.10000, 0.00000]], [ 0.00021, [ 3, -1.10000, 0.00000], [ 3, 1.06667, 0.00000]], [ 0.00020, [ 3, -1.06667, 0.00000], [ 3, 1.06667, 0.00000]], [ 0.00021, [ 3, -1.06667, -0.00001], [ 3, 1.13333, 0.00001]], [ 0.00034, [ 3, -1.13333, 0.00000], [ 3, 1.23333, 0.00000]], [ 0.00021, [ 3, -1.23333, 0.00000], [ 3, 0.70000, 0.00000]], [ 0.00035, [ 3, -0.70000, 0.00000], [ 3, 0.00000, 0.00000]]])

    names.append("RShoulderPitch")
    times.append([ 1.40000, 4.60000, 7.80000, 11.00000, 14.20000, 17.50000, 20.70000, 23.90000, 27.30000, 31.00000, 33.10000])
    keys.append([ [ 1.40825, [ 3, -0.46667, 0.00000], [ 3, 1.06667, 0.00000]], [ 1.41439, [ 3, -1.06667, 0.00000], [ 3, 1.06667, 0.00000]], [ 1.38064, [ 3, -1.06667, 0.00000], [ 3, 1.06667, 0.00000]], [ 1.38985, [ 3, -1.06667, 0.00000], [ 3, 1.06667, 0.00000]], [ 1.38371, [ 3, -1.06667, 0.00614], [ 3, 1.10000, -0.00633]], [ -0.20551, [ 3, -1.10000, 0.00000], [ 3, 1.06667, 0.00000]], [ 0.08441, [ 3, -1.06667, 0.00000], [ 3, 1.06667, 0.00000]], [ -0.34664, [ 3, -1.06667, 0.00000], [ 3, 1.13333, 0.00000]], [ -0.10274, [ 3, -1.13333, -0.06195], [ 3, 1.23333, 0.06742]], [ 0.04146, [ 3, -1.23333, -0.03686], [ 3, 0.70000, 0.02092]], [ 0.07061, [ 3, -0.70000, 0.00000], [ 3, 0.00000, 0.00000]]])

    names.append("RShoulderRoll")
    times.append([ 1.40000, 4.60000, 7.80000, 11.00000, 14.20000, 17.50000, 20.70000, 23.90000, 27.30000, 31.00000, 33.10000])
    keys.append([ [ -0.35440, [ 3, -0.46667, 0.00000], [ 3, 1.06667, 0.00000]], [ -0.34979, [ 3, -1.06667, -0.00230], [ 3, 1.06667, 0.00230]], [ -0.34059, [ 3, -1.06667, 0.00000], [ 3, 1.06667, 0.00000]], [ -1.29934, [ 3, -1.06667, 0.00000], [ 3, 1.06667, 0.00000]], [ -1.26713, [ 3, -1.06667, 0.00000], [ 3, 1.10000, 0.00000]], [ -1.27019, [ 3, -1.10000, 0.00000], [ 3, 1.06667, 0.00000]], [ -0.00873, [ 3, -1.06667, 0.00000], [ 3, 1.06667, 0.00000]], [ -0.00873, [ 3, -1.06667, 0.00000], [ 3, 1.13333, 0.00000]], [ -0.05987, [ 3, -1.13333, 0.02310], [ 3, 1.23333, -0.02514]], [ -0.15344, [ 3, -1.23333, 0.00000], [ 3, 0.70000, 0.00000]], [ -0.12430, [ 3, -0.70000, 0.00000], [ 3, 0.00000, 0.00000]]])

    names.append("RElbowYaw")
    times.append([ 1.40000, 4.60000, 7.80000, 11.00000, 14.20000, 17.50000, 20.70000, 23.90000, 27.30000, 31.00000, 33.10000])
    keys.append([ [ 1.38516, [ 3, -0.46667, 0.00000], [ 3, 1.06667, 0.00000]], [ 1.38976, [ 3, -1.06667, -0.00281], [ 3, 1.06667, 0.00281]], [ 1.40203, [ 3, -1.06667, 0.00000], [ 3, 1.06667, 0.00000]], [ 0.97405, [ 3, -1.06667, 0.10891], [ 3, 1.06667, -0.10891]], [ 0.74855, [ 3, -1.06667, 0.12234], [ 3, 1.10000, -0.12617]], [ 0.22852, [ 3, -1.10000, 0.14693], [ 3, 1.06667, -0.14248]], [ -0.11969, [ 3, -1.06667, 0.00000], [ 3, 1.06667, 0.00000]], [ -0.11969, [ 3, -1.06667, 0.00000], [ 3, 1.13333, 0.00000]], [ -0.07521, [ 3, -1.13333, -0.01567], [ 3, 1.23333, 0.01705]], [ -0.02152, [ 3, -1.23333, 0.00000], [ 3, 0.70000, 0.00000]], [ -0.03226, [ 3, -0.70000, 0.00000], [ 3, 0.00000, 0.00000]]])

    names.append("RElbowRoll")
    times.append([ 1.40000, 4.60000, 7.80000, 11.00000, 14.20000, 17.50000, 20.70000, 23.90000, 27.30000, 31.00000, 33.10000])
    keys.append([ [ 1.01708, [ 3, -0.46667, 0.00000], [ 3, 1.06667, 0.00000]], [ 1.02015, [ 3, -1.06667, -0.00307], [ 3, 1.06667, 0.00307]], [ 1.03856, [ 3, -1.06667, -0.00716], [ 3, 1.06667, 0.00716]], [ 1.06310, [ 3, -1.06667, 0.00000], [ 3, 1.06667, 0.00000]], [ 0.05833, [ 3, -1.06667, 0.00000], [ 3, 1.10000, 0.00000]], [ 0.05987, [ 3, -1.10000, -0.00153], [ 3, 1.06667, 0.00149]], [ 0.13043, [ 3, -1.06667, 0.00000], [ 3, 1.06667, 0.00000]], [ 0.12736, [ 3, -1.06667, 0.00307], [ 3, 1.13333, -0.00326]], [ 0.09822, [ 3, -1.13333, 0.01224], [ 3, 1.23333, -0.01332]], [ 0.05066, [ 3, -1.23333, 0.00000], [ 3, 0.70000, 0.00000]], [ 0.06140, [ 3, -0.70000, 0.00000], [ 3, 0.00000, 0.00000]]])

    names.append("RWristYaw")
    times.append([ 1.40000, 4.60000, 7.80000, 11.00000, 14.20000, 17.50000, 20.70000, 23.90000, 27.30000, 31.00000, 33.10000])
    keys.append([ [ 0.02910, [ 3, -0.46667, 0.00000], [ 3, 1.06667, 0.00000]], [ 0.03064, [ 3, -1.06667, 0.00000], [ 3, 1.06667, 0.00000]], [ 0.02757, [ 3, -1.06667, 0.00000], [ 3, 1.06667, 0.00000]], [ 0.02910, [ 3, -1.06667, 0.00000], [ 3, 1.06667, 0.00000]], [ 0.02450, [ 3, -1.06667, 0.00000], [ 3, 1.10000, 0.00000]], [ 0.12575, [ 3, -1.10000, 0.00000], [ 3, 1.06667, 0.00000]], [ 0.03831, [ 3, -1.06667, 0.00000], [ 3, 1.06667, 0.00000]], [ 0.03831, [ 3, -1.06667, 0.00000], [ 3, 1.13333, 0.00000]], [ 0.03677, [ 3, -1.13333, 0.00153], [ 3, 1.23333, -0.00167]], [ 0.00609, [ 3, -1.23333, 0.00000], [ 3, 0.70000, 0.00000]], [ 0.02450, [ 3, -0.70000, 0.00000], [ 3, 0.00000, 0.00000]]])

    names.append("RHand")
    times.append([ 1.40000, 4.60000, 7.80000, 11.00000, 14.20000, 17.50000, 20.70000, 23.90000, 27.30000, 31.00000, 33.10000])
    keys.append([ [ 0.00018, [ 3, -0.46667, 0.00000], [ 3, 1.06667, 0.00000]], [ 0.00018, [ 3, -1.06667, 0.00000], [ 3, 1.06667, 0.00000]], [ 0.00017, [ 3, -1.06667, 0.00000], [ 3, 1.06667, 0.00000]], [ 0.00018, [ 3, -1.06667, 0.00000], [ 3, 1.06667, 0.00000]], [ 0.00017, [ 3, -1.06667, 0.00000], [ 3, 1.10000, 0.00000]], [ 0.00017, [ 3, -1.10000, 0.00000], [ 3, 1.06667, 0.00000]], [ 0.00018, [ 3, -1.06667, 0.00000], [ 3, 1.06667, 0.00000]], [ 0.00018, [ 3, -1.06667, 0.00000], [ 3, 1.13333, 0.00000]], [ 0.00031, [ 3, -1.13333, 0.00000], [ 3, 1.23333, 0.00000]], [ 0.00017, [ 3, -1.23333, 0.00000], [ 3, 0.70000, 0.00000]], [ 0.00031, [ 3, -0.70000, 0.00000], [ 3, 0.00000, 0.00000]]])

    names.append("LHipYawPitch")
    times.append([ 1.40000, 4.60000, 7.80000, 11.00000, 14.20000, 17.50000, 20.70000, 23.90000, 27.30000, 31.00000, 33.10000])
    keys.append([ [ 0.00158, [ 3, -0.46667, 0.00000], [ 3, 1.06667, 0.00000]], [ -0.07206, [ 3, -1.06667, 0.07363], [ 3, 1.06667, -0.07363]], [ -0.50925, [ 3, -1.06667, 0.00000], [ 3, 1.06667, 0.00000]], [ -0.50925, [ 3, -1.06667, 0.00000], [ 3, 1.06667, 0.00000]], [ -0.50925, [ 3, -1.06667, 0.00000], [ 3, 1.10000, 0.00000]], [ -0.50925, [ 3, -1.10000, 0.00000], [ 3, 1.06667, 0.00000]], [ -0.50925, [ 3, -1.06667, 0.00000], [ 3, 1.06667, 0.00000]], [ -0.50925, [ 3, -1.06667, 0.00000], [ 3, 1.13333, 0.00000]], [ -0.43868, [ 3, -1.13333, -0.07056], [ 3, 1.23333, 0.07679]], [ 0.00004, [ 3, -1.23333, 0.00000], [ 3, 0.70000, 0.00000]], [ 0.00004, [ 3, -0.70000, 0.00000], [ 3, 0.00000, 0.00000]]])

    names.append("LHipRoll")
    times.append([ 1.40000, 4.60000, 7.80000, 11.00000, 14.20000, 17.50000, 20.70000, 23.90000, 27.30000, 31.00000, 33.10000])
    keys.append([ [ 0.00004, [ 3, -0.46667, 0.00000], [ 3, 1.06667, 0.00000]], [ -0.00916, [ 3, -1.06667, 0.00920], [ 3, 1.06667, -0.00920]], [ -0.10120, [ 3, -1.06667, 0.00000], [ 3, 1.06667, 0.00000]], [ -0.09967, [ 3, -1.06667, 0.00000], [ 3, 1.06667, 0.00000]], [ -0.10120, [ 3, -1.06667, 0.00000], [ 3, 1.10000, 0.00000]], [ -0.10120, [ 3, -1.10000, 0.00000], [ 3, 1.06667, 0.00000]], [ -0.10120, [ 3, -1.06667, 0.00000], [ 3, 1.06667, 0.00000]], [ -0.10120, [ 3, -1.06667, 0.00000], [ 3, 1.13333, 0.00000]], [ -0.03831, [ 3, -1.13333, -0.01616], [ 3, 1.23333, 0.01759]], [ 0.00004, [ 3, -1.23333, 0.00000], [ 3, 0.70000, 0.00000]], [ 0.00004, [ 3, -0.70000, 0.00000], [ 3, 0.00000, 0.00000]]])

    names.append("LHipPitch")
    times.append([ 1.40000, 4.60000, 7.80000, 11.00000, 14.20000, 17.50000, 20.70000, 23.90000, 27.30000, 31.00000, 33.10000])
    keys.append([ [ -0.43715, [ 3, -0.46667, 0.00000], [ 3, 1.06667, 0.00000]], [ -1.63060, [ 3, -1.06667, 0.00767], [ 3, 1.06667, -0.00767]], [ -1.63827, [ 3, -1.06667, 0.00000], [ 3, 1.06667, 0.00000]], [ -1.63674, [ 3, -1.06667, 0.00000], [ 3, 1.06667, 0.00000]], [ -1.63674, [ 3, -1.06667, 0.00000], [ 3, 1.10000, 0.00000]], [ -1.63827, [ 3, -1.10000, 0.00000], [ 3, 1.06667, 0.00000]], [ -1.63827, [ 3, -1.06667, 0.00000], [ 3, 1.06667, 0.00000]], [ -1.63827, [ 3, -1.06667, 0.00000], [ 3, 1.13333, 0.00000]], [ -0.54913, [ 3, -1.13333, -0.26151], [ 3, 1.23333, 0.28459]], [ 0.00004, [ 3, -1.23333, 0.00000], [ 3, 0.70000, 0.00000]], [ 0.00004, [ 3, -0.70000, 0.00000], [ 3, 0.00000, 0.00000]]])

    names.append("LKneePitch")
    times.append([ 1.40000, 4.60000, 7.80000, 11.00000, 14.20000, 17.50000, 20.70000, 23.90000, 27.30000, 31.00000, 33.10000])
    keys.append([ [ 0.69793, [ 3, -0.46667, 0.00000], [ 3, 1.06667, 0.00000]], [ 2.11255, [ 3, -1.06667, 0.00000], [ 3, 1.06667, 0.00000]], [ 2.11255, [ 3, -1.06667, 0.00000], [ 3, 1.06667, 0.00000]], [ 2.11255, [ 3, -1.06667, 0.00000], [ 3, 1.06667, 0.00000]], [ 2.11075, [ 3, -1.06667, 0.00000], [ 3, 1.10000, 0.00000]], [ 2.11255, [ 3, -1.10000, 0.00000], [ 3, 1.06667, 0.00000]], [ 2.11227, [ 3, -1.06667, 0.00028], [ 3, 1.06667, -0.00028]], [ 2.11075, [ 3, -1.06667, 0.00000], [ 3, 1.13333, 0.00000]], [ 2.11255, [ 3, -1.13333, 0.00000], [ 3, 1.23333, 0.00000]], [ -0.00004, [ 3, -1.23333, 0.00000], [ 3, 0.70000, 0.00000]], [ 0.00149, [ 3, -0.70000, 0.00000], [ 3, 0.00000, 0.00000]]])

    names.append("LAnklePitch")
    times.append([ 1.40000, 4.60000, 7.80000, 11.00000, 14.20000, 17.50000, 20.70000, 23.90000, 27.30000, 31.00000, 33.10000])
    keys.append([ [ -0.34826, [ 3, -0.46667, 0.00000], [ 3, 1.06667, 0.00000]], [ -0.67347, [ 3, -1.06667, 0.00000], [ 3, 1.06667, 0.00000]], [ -0.65966, [ 3, -1.06667, 0.00000], [ 3, 1.06667, 0.00000]], [ -0.67040, [ 3, -1.06667, 0.00000], [ 3, 1.06667, 0.00000]], [ -0.66887, [ 3, -1.06667, -0.00101], [ 3, 1.10000, 0.00104]], [ -0.66426, [ 3, -1.10000, -0.00156], [ 3, 1.06667, 0.00151]], [ -0.65966, [ 3, -1.06667, 0.00000], [ 3, 1.06667, 0.00000]], [ -0.66120, [ 3, -1.06667, 0.00153], [ 3, 1.13333, -0.00163]], [ -1.18944, [ 3, -1.13333, 0.00000], [ 3, 1.23333, 0.00000]], [ -0.00004, [ 3, -1.23333, -0.00000], [ 3, 0.70000, 0.00000]], [ -0.00004, [ 3, -0.70000, 0.00000], [ 3, 0.00000, 0.00000]]])

    names.append("LAnkleRoll")
    times.append([ 1.40000, 4.60000, 7.80000, 11.00000, 14.20000, 17.50000, 20.70000, 23.90000, 27.30000, 31.00000, 33.10000])
    keys.append([ [ -0.00303, [ 3, -0.46667, 0.00000], [ 3, 1.06667, 0.00000]], [ -0.01530, [ 3, -1.06667, 0.00486], [ 3, 1.06667, -0.00486]], [ -0.03217, [ 3, -1.06667, 0.00000], [ 3, 1.06667, 0.00000]], [ -0.03217, [ 3, -1.06667, 0.00000], [ 3, 1.06667, 0.00000]], [ -0.03217, [ 3, -1.06667, 0.00000], [ 3, 1.10000, 0.00000]], [ -0.03217, [ 3, -1.10000, 0.00000], [ 3, 1.06667, 0.00000]], [ -0.03217, [ 3, -1.06667, 0.00000], [ 3, 1.06667, 0.00000]], [ -0.03371, [ 3, -1.06667, 0.00000], [ 3, 1.13333, 0.00000]], [ 0.09822, [ 3, -1.13333, 0.00000], [ 3, 1.23333, 0.00000]], [ 0.00004, [ 3, -1.23333, 0.00000], [ 3, 0.70000, 0.00000]], [ 0.00158, [ 3, -0.70000, 0.00000], [ 3, 0.00000, 0.00000]]])

    names.append("RHipRoll")
    times.append([ 1.40000, 4.60000, 7.80000, 11.00000, 14.20000, 17.50000, 20.70000, 23.90000, 27.30000, 31.00000, 33.10000])
    keys.append([ [ 0.00158, [ 3, -0.46667, 0.00000], [ 3, 1.06667, 0.00000]], [ 0.00004, [ 3, -1.06667, 0.00000], [ 3, 1.06667, 0.00000]], [ 0.10435, [ 3, -1.06667, 0.00000], [ 3, 1.06667, 0.00000]], [ 0.10282, [ 3, -1.06667, 0.00000], [ 3, 1.06667, 0.00000]], [ 0.10435, [ 3, -1.06667, 0.00000], [ 3, 1.10000, 0.00000]], [ 0.10435, [ 3, -1.10000, 0.00000], [ 3, 1.06667, 0.00000]], [ 0.10435, [ 3, -1.06667, 0.00000], [ 3, 1.06667, 0.00000]], [ 0.10435, [ 3, -1.06667, 0.00000], [ 3, 1.13333, 0.00000]], [ 0.06600, [ 3, -1.13333, 0.01665], [ 3, 1.23333, -0.01812]], [ 0.00004, [ 3, -1.23333, 0.00000], [ 3, 0.70000, -0.00000]], [ 0.00004, [ 3, -0.70000, 0.00000], [ 3, 0.00000, 0.00000]]])

    names.append("RHipPitch")
    times.append([ 1.40000, 4.60000, 7.80000, 11.00000, 14.20000, 17.50000, 20.70000, 23.90000, 27.30000, 31.00000, 33.10000])
    keys.append([ [ -0.43877, [ 3, -0.46667, 0.00000], [ 3, 1.06667, 0.00000]], [ -1.65830, [ 3, -1.06667, 0.00460], [ 3, 1.06667, -0.00460]], [ -1.66290, [ 3, -1.06667, 0.00000], [ 3, 1.06667, 0.00000]], [ -1.66136, [ 3, -1.06667, 0.00000], [ 3, 1.06667, 0.00000]], [ -1.66597, [ 3, -1.06667, 0.00126], [ 3, 1.10000, -0.00130]], [ -1.66903, [ 3, -1.10000, 0.00000], [ 3, 1.06667, 0.00000]], [ -1.66290, [ 3, -1.06667, 0.00000], [ 3, 1.06667, 0.00000]], [ -1.66290, [ 3, -1.06667, 0.00000], [ 3, 1.13333, 0.00000]], [ -0.78852, [ 3, -1.13333, -0.26519], [ 3, 1.23333, 0.28859]], [ -0.00158, [ 3, -1.23333, 0.00000], [ 3, 0.70000, 0.00000]], [ -0.00158, [ 3, -0.70000, 0.00000], [ 3, 0.00000, 0.00000]]])

    names.append("RKneePitch")
    times.append([ 1.40000, 4.60000, 7.80000, 11.00000, 14.20000, 17.50000, 20.70000, 23.90000, 27.30000, 31.00000, 33.10000])
    keys.append([ [ 0.69801, [ 3, -0.46667, 0.00000], [ 3, 1.06667, 0.00000]], [ 2.11255, [ 3, -1.06667, 0.00000], [ 3, 1.06667, 0.00000]], [ 2.11255, [ 3, -1.06667, 0.00000], [ 3, 1.06667, 0.00000]], [ 2.11255, [ 3, -1.06667, 0.00000], [ 3, 1.06667, 0.00000]], [ 2.11235, [ 3, -1.06667, 0.00000], [ 3, 1.10000, 0.00000]], [ 2.11255, [ 3, -1.10000, 0.00000], [ 3, 1.06667, 0.00000]], [ 2.11255, [ 3, -1.06667, 0.00000], [ 3, 1.06667, 0.00000]], [ 2.11255, [ 3, -1.06667, 0.00000], [ 3, 1.13333, 0.00000]], [ 2.11255, [ 3, -1.13333, 0.00000], [ 3, 1.23333, -0.00000]], [ -0.00763, [ 3, -1.23333, 0.00000], [ 3, 0.70000, -0.00000]], [ -0.00763, [ 3, -0.70000, 0.00000], [ 3, 0.00000, 0.00000]]])

    names.append("RAnklePitch")
    times.append([ 1.40000, 4.60000, 7.80000, 11.00000, 14.20000, 17.50000, 20.70000, 23.90000, 27.30000, 31.00000, 33.10000])
    keys.append([ [ -0.35585, [ 3, -0.46667, 0.00000], [ 3, 1.06667, 0.00000]], [ -0.68872, [ 3, -1.06667, 0.00000], [ 3, 1.06667, 0.00000]], [ -0.67185, [ 3, -1.06667, -0.00307], [ 3, 1.06667, 0.00307]], [ -0.66878, [ 3, -1.06667, 0.00000], [ 3, 1.06667, 0.00000]], [ -0.66878, [ 3, -1.06667, 0.00000], [ 3, 1.10000, 0.00000]], [ -0.66725, [ 3, -1.10000, 0.00000], [ 3, 1.06667, 0.00000]], [ -0.66878, [ 3, -1.06667, 0.00077], [ 3, 1.06667, -0.00077]], [ -0.67185, [ 3, -1.06667, 0.00307], [ 3, 1.13333, -0.00326]], [ -1.02160, [ 3, -1.13333, 0.00000], [ 3, 1.23333, 0.00000]], [ -0.00149, [ 3, -1.23333, 0.00000], [ 3, 0.70000, 0.00000]], [ -0.00149, [ 3, -0.70000, 0.00000], [ 3, 0.00000, 0.00000]]])

    names.append("RAnkleRoll")
    times.append([ 1.40000, 4.60000, 7.80000, 11.00000, 14.20000, 17.50000, 20.70000, 23.90000, 27.30000, 31.00000, 33.10000])
    keys.append([ [ -0.00149, [ 3, -0.46667, 0.00000], [ 3, 1.06667, 0.00000]], [ -0.00303, [ 3, -1.06667, 0.00000], [ 3, 1.06667, 0.00000]], [ 0.00618, [ 3, -1.06667, 0.00000], [ 3, 1.06667, 0.00000]], [ 0.00618, [ 3, -1.06667, 0.00000], [ 3, 1.06667, 0.00000]], [ 0.00618, [ 3, -1.06667, 0.00000], [ 3, 1.10000, 0.00000]], [ 0.00618, [ 3, -1.10000, 0.00000], [ 3, 1.06667, 0.00000]], [ 0.00618, [ 3, -1.06667, 0.00000], [ 3, 1.06667, 0.00000]], [ 0.00618, [ 3, -1.06667, 0.00000], [ 3, 1.13333, 0.00000]], [ -0.13648, [ 3, -1.13333, 0.00000], [ 3, 1.23333, 0.00000]], [ 0.00618, [ 3, -1.23333, 0.00000], [ 3, 0.70000, 0.00000]], [ 0.00618, [ 3, -0.70000, 0.00000], [ 3, 0.00000, 0.00000]]])

    try:
      # uncomment the following line and modify the IP if you use this script outside Choregraphe.
      motion = ALProxy("ALMotion", "192.168.105.14", 9559)
      motion.stiffnessInterpolation("Body", 1.0, 0.1)
      #motion.walkInit()
      motion.angleInterpolationBezier(names, times, keys);
    except BaseException, err:
      print err
    
if __name__ == '__main__':
  rospy.init_node('PickupActionServer')
  server = PickupActionServer()
  rospy.spin()
